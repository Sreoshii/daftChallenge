[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "Importantüìä Challenge Requirements In Section Student Analysis Section\n\n\n\n\nRecreate all three scurvy DAGs using DAFT programming\nOptional: Demonstrate understanding of DAFT customization options\n\n\n\n\n\nCore Question: How can we use the DAFT package to create visually appealing Directed Acyclic Graphs (DAGs) that tell a compelling data story?\nThe Challenge: You‚Äôll recreate three historical DAGs depicting the fascinating story of how we lost and rediscovered the cure to scurvy. This challenge teaches you to use DAFT for creating professional-quality probabilistic graphical models.\nOur Approach: We‚Äôll work through the three different understandings of the scurvy data generating process, learning DAFT customization techniques while exploring a crucial moment in medical history.\n\n\n\n\n\n\nWarning‚ö†Ô∏è AI Partnership Required\n\n\n\nThis challenge pushes boundaries intentionally. You‚Äôll tackle problems that normally require weeks of study, but with Cursor AI as your partner (and your brain keeping it honest), you can accomplish more than you thought possible.\nThe new reality: The four stages of competence are Ignorance ‚Üí Awareness ‚Üí Learning ‚Üí Mastery. AI lets us produce Mastery-level work while operating primarily in the Awareness stage. I focus on awareness training, you leverage AI for execution, and together we create outputs that used to require years of dedicated study.\n\n\n\n\n\nScurvy was a devastating disease that affected sailors on long voyages. The cure was discovered in 1747, but due to a misunderstanding about the cause, the cure was lost for over 150 years. The story involves three different understandings of the data generating process:\n\n1747 Understanding: Lemons prevent scurvy (correct but incomplete!)\nMisguided Belief: Acid kills bacteria that causes scurvy (wrong!)\n1928 Understanding: Vitamin C prevents scurvy (the real mechanism)\n\n\n\n\nFirst, let‚Äôs install the DAFT package and set up our environment:\n\n\nCode\n# Install DAFT package (run this in terminal if not already installed)\n# pip install 'daft-pgm'\n\nimport daft\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Set up plotting parameters for better quality\nplt.rcParams['figure.dpi'] = 150\nplt.rcParams['savefig.dpi'] = 300\n\nprint(\"DAFT package imported successfully!\")\nprint(\"Ready to create beautiful DAGs!\")\n\n\nDAFT package imported successfully!\nReady to create beautiful DAGs!\n\n\n\n\n\n\n\n\nNoteüí° Understanding DAFT\n\n\n\nDAFT (Directed Acyclic Factor Graphs Toolkit) is a Python package for creating probabilistic graphical models. It‚Äôs particularly useful for:\n\nCreating Directed Acyclic Graphs (DAGs)\nVisualizing causal relationships\nCommunicating data generating processes\nCreating publication-quality figures\n\nKey DAFT Concepts:\n\nNodes: Represent variables or factors\nEdges: Show relationships between variables\nPlates: Indicate repeated structures\nStyling: Customize colors, shapes, and formatting\n\n\n\n\n\n\nYour task is to recreate these three historical DAGs using DAFT, making them visually appealing and professionally formatted.\n\n\nHistorical Context: In 1747, James Lind discovered that lemons prevent scurvy through a controlled experiment. However, the understanding was incomplete - they knew lemons worked but not why.\nYour Task: Recreate this DAG showing the relationship between lemons and scurvy prevention.\nReference Image: \n\n\nCode\n# Create DAG showing the 1747 understanding: Lemons ‚Üí Scurvy Prevention\n# This was the first correct understanding, though incomplete\n\nimport daft\nimport matplotlib.pyplot as plt\n\n# Create PGM object with professional styling\npgm = daft.PGM(dpi=150)\n\n# Add nodes with professional colors and styling\npgm.add_node(\"lemons\", \"Lemons\", 1, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#FFD700',  # Vibrant golden yellow for lemons\n                 'edgecolor': '#FF8C00',  # Dark orange border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\npgm.add_node(\"scurvy_prevention\", \"Scurvy\\nPrevention\", 3, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#7FFF00',  # Bright chartreuse for prevention\n                 'edgecolor': '#228B22',  # Forest green border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\n# Add edge from Lemons to Scurvy Prevention\npgm.add_edge(\"lemons\", \"scurvy_prevention\")\n\n# Render the DAG\npgm.render()\nplt.title(\"DAG 1: 1747 Understanding - Lemons Prevent Scurvy\", fontsize=14, fontweight='bold')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nHistorical Context: Over time, people came to believe it was the acid in lemons that killed bacteria which was causing scurvy. This led to lemons being replaced by limes (cheaper but less Vitamin C) or just using acids like vinegar, causing scurvy to return.\nYour Task: Recreate this DAG showing the incorrect understanding of the data generating process.\nReference Image: \n\n\nCode\n# Create DAG showing the misguided belief: Acid ‚Üí Bacteria Death ‚Üí Scurvy Prevention\n# This was the WRONG understanding that led to scurvy returning\n\nimport daft\nimport matplotlib.pyplot as plt\n\n# Create PGM object with professional styling\npgm = daft.PGM(dpi=150)\n\n# Add nodes with professional colors - using red/orange tones to indicate wrong understanding\npgm.add_node(\"acid\", \"Acid\", 1, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#FF4500',  # Bright orange red for acid\n                 'edgecolor': '#8B0000',  # Dark red border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\npgm.add_node(\"bacteria\", \"Bacteria\\nDeath\", 3.5, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#FF8C00',  # Vibrant dark orange for bacteria death\n                 'edgecolor': '#FF4500',  # Orange red border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\npgm.add_node(\"scurvy_prevention\", \"Scurvy\\nPrevention\", 6, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#DAA520',  # Goldenrod - muted to show it's not effective\n                 'edgecolor': '#B8860B',  # Dark goldenrod border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\n# Add edges showing the incorrect causal chain\npgm.add_edge(\"acid\", \"bacteria\")\npgm.add_edge(\"bacteria\", \"scurvy_prevention\")\n\n# Render the DAG\npgm.render()\nplt.title(\"DAG 2: Misguided Belief - Acid Kills Bacteria (WRONG)\", fontsize=14, fontweight='bold')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nHistorical Context: In 1928, the true mechanism was discovered - it was Vitamin C (ascorbic acid) that prevented scurvy. This complete understanding finally explained why lemons worked and why the acid theory was wrong.\nYour Task: Recreate this DAG showing the complete and correct understanding of the scurvy data generating process.\nReference Image: \n\n\nCode\n# Create DAG showing the 1928 understanding: Vitamin C ‚Üí Scurvy Prevention\n# This is the COMPLETE and CORRECT understanding of the scurvy mechanism\n\nimport daft\nimport matplotlib.pyplot as plt\n\n# Create PGM object with professional styling\npgm = daft.PGM(dpi=150)\n\n# Add nodes with professional colors - using cool, trustworthy colors for correct understanding\npgm.add_node(\"vitamin_c\", \"Vitamin C\\n(Complete Truth)\", 1, 1, aspect=3.2, scale=1.5,\n             plot_params={\n                 'facecolor': '#40E0D0',  # Vibrant turquoise for Vitamin C\n                 'edgecolor': '#008B8B',  # Dark cyan border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\npgm.add_node(\"scurvy_prevention\", \"Scurvy\\nPrevention\\n(Correct Method)\", 3.5, 1, aspect=3.2, scale=1.5,\n             plot_params={\n                 'facecolor': '#00FA9A',  # Bright medium spring green for prevention\n                 'edgecolor': '#006400',  # Dark green border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\n# Add edge showing the correct causal relationship\npgm.add_edge(\"vitamin_c\", \"scurvy_prevention\")\n\n# Render the DAG\npgm.render()\nplt.title(\"DAG 3: 1928 Understanding - Vitamin C Prevents Scurvy (CORRECT)\", fontsize=14, fontweight='bold')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour Task: Demonstrate your mastery of DAFT through comprehensive recreation of the three scurvy DAGs and thoughtful analysis. The bulk of your grade comes from successfully recreating the DAGs and answering the discussion questions.\n\n\n\n\n\n\nImportantüìä Challenge Requirements\n\n\n\nComplete all DAG recreation sections:\n\nDAG 1 (1747): Lemons prevent scurvy - correct but incomplete\nDAG 2 (Misguided): Acid kills bacteria - wrong understanding\n\nDAG 3 (1928): Vitamin C prevents scurvy - complete and correct\nOptional: Add a little professional styling to the DAGs to make them more visually appealing (example: use nice fill colors and/or enclose the text in the ellipse completely).\n\n\n\n\n\nYour DAGs should:\n\n(90% grade): Accurately recreate the reference images\n(100% grade): Add professional colors and possibly play with shapes to make it more visually appealing (example: use nice fill colors and/or enclose the text in the ellipse completely)\nInclude clear, readable labels\nDemonstrate understanding of DAFT customization options\nBe suitable for a business or academic audience\n\n\n\n\nHere‚Äôs an example (see Figure¬†1) of how to create a professionally styled node in DAFT with nice captions and references to the figure:\n\n\nCode\nimport daft\nimport matplotlib.pyplot as plt\n\n# Create a PGM object\npgm = daft.PGM(dpi=150, alternate_style=\"outer\")\n\n# Example of a professionally styled node\npgm.add_node(\"vitamin_c\", \"Vitamin C\\nIntake\" + r\" $(X)$\", 1, 1, aspect = 3, scale = 1.1,\n             plot_params={\n                 'facecolor': 'lightgreen', \n                 'edgecolor': 'darkgreen', \n                 'linewidth': 2,\n                 'alpha': 0.8,\n             })\npgm.add_node(\"health\", \"Healthiness\\n\"+r\" $(Y)$\", 3.25, 1, aspect = 3, scale = 1.1,\n             plot_params={\n                 'facecolor': 'thistle', \n                 'edgecolor': 'purple', \n                 'linewidth': 2,\n                 'alpha': 0.8,\n             })\npgm.add_edge(\"vitamin_c\", \"health\")\n\npgm.render()\n\n\n\n\n\n\n\n\nFigure¬†1: Example: Professional DAFT Node Styling\n\n\n\n\n\nKey Styling Parameters:\n\nfacecolor: Background color of the node\nedgecolor: Border color of the node\n\nlinewidth: Thickness of the border\nalpha: Transparency (0.0 to 1.0)\nfontsize: Size of text inside the node\naspect: Width/height aspect ratio of the node (default: 1.0)\nscale: Height of the node (default: 1.0)\n\n\n\n\n\n\n\n\n\n\n\nImportantüìÅ Getting Started\n\n\n\nStep 1: Create a new repository in your GitHub account named ‚ÄúdaftChallenge‚Äù (forked from https://github.com/flyaflya/daftChallenge)\nStep 2: Clone your repository locally using Cursor (or VS Code)\nStep 3: Be sure to install DAFT in your environment: pip install 'daft-pgm'.\nStep 4: Modify your local copy of this index.qmd file to complete the challenge and get it to be a github pages website.\n\n\n\n\n\n\n\n\nEssential DAFT Documentation:\n\nDAFT Documentation\nDAFT Examples\nMatplotlib Colors\n\nKey DAFT Parameters to Explore:\n\nplot_params: Dictionary of matplotlib parameters for styling\naspect: Controls node width (default: 1.0)\nscale: Controls node size (default: 1.0)\nfontsize: Text size in the node\nalternate: Use alternative node shape (True/False)\n\n\n\n\n90% Grade: Successfully recreate all 3 DAGs with good visual quality.\n100% Grade: Recreate all 3 DAGs with enhanced quality and visual aesthetics (example: use nice fill colors and/or enclose the text in the ellipse completely).\n\n\n\nMinimum Requirements (Required for Any Points):\n\nCreated repository named ‚ÄúdaftChallenge‚Äù in your GitHub account (forked from https://github.com/flyaflya/daftChallenge)\nCloned repository locally using Cursor (or VS Code)\nInstalled DAFT package successfully\nDocument rendered to HTML successfully\nHTML files uploaded to your repository\nGitHub Pages enabled and working\nSite accessible at https://[your-username].github.io/daftChallenge/\n\n90% Grade Requirements:\n\nSuccessfully recreate all 3 DAGs\nGood visual quality with appropriate styling\n\n100% Grade Requirements:\n\nAll DAG recreations completed with professional quality\nEnhanced visual aesthetics with professional styling"
  },
  {
    "objectID": "index.html#the-problem-mastering-probabilistic-graphical-models-with-daft",
    "href": "index.html#the-problem-mastering-probabilistic-graphical-models-with-daft",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "Core Question: How can we use the DAFT package to create visually appealing Directed Acyclic Graphs (DAGs) that tell a compelling data story?\nThe Challenge: You‚Äôll recreate three historical DAGs depicting the fascinating story of how we lost and rediscovered the cure to scurvy. This challenge teaches you to use DAFT for creating professional-quality probabilistic graphical models.\nOur Approach: We‚Äôll work through the three different understandings of the scurvy data generating process, learning DAFT customization techniques while exploring a crucial moment in medical history.\n\n\n\n\n\n\nWarning‚ö†Ô∏è AI Partnership Required\n\n\n\nThis challenge pushes boundaries intentionally. You‚Äôll tackle problems that normally require weeks of study, but with Cursor AI as your partner (and your brain keeping it honest), you can accomplish more than you thought possible.\nThe new reality: The four stages of competence are Ignorance ‚Üí Awareness ‚Üí Learning ‚Üí Mastery. AI lets us produce Mastery-level work while operating primarily in the Awareness stage. I focus on awareness training, you leverage AI for execution, and together we create outputs that used to require years of dedicated study."
  },
  {
    "objectID": "index.html#the-scurvy-story-a-data-science-tragedy",
    "href": "index.html#the-scurvy-story-a-data-science-tragedy",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "Scurvy was a devastating disease that affected sailors on long voyages. The cure was discovered in 1747, but due to a misunderstanding about the cause, the cure was lost for over 150 years. The story involves three different understandings of the data generating process:\n\n1747 Understanding: Lemons prevent scurvy (correct but incomplete!)\nMisguided Belief: Acid kills bacteria that causes scurvy (wrong!)\n1928 Understanding: Vitamin C prevents scurvy (the real mechanism)"
  },
  {
    "objectID": "index.html#environment-setup",
    "href": "index.html#environment-setup",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "First, let‚Äôs install the DAFT package and set up our environment:\n\n\nCode\n# Install DAFT package (run this in terminal if not already installed)\n# pip install 'daft-pgm'\n\nimport daft\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Set up plotting parameters for better quality\nplt.rcParams['figure.dpi'] = 150\nplt.rcParams['savefig.dpi'] = 300\n\nprint(\"DAFT package imported successfully!\")\nprint(\"Ready to create beautiful DAGs!\")\n\n\nDAFT package imported successfully!\nReady to create beautiful DAGs!\n\n\n\n\n\n\n\n\nNoteüí° Understanding DAFT\n\n\n\nDAFT (Directed Acyclic Factor Graphs Toolkit) is a Python package for creating probabilistic graphical models. It‚Äôs particularly useful for:\n\nCreating Directed Acyclic Graphs (DAGs)\nVisualizing causal relationships\nCommunicating data generating processes\nCreating publication-quality figures\n\nKey DAFT Concepts:\n\nNodes: Represent variables or factors\nEdges: Show relationships between variables\nPlates: Indicate repeated structures\nStyling: Customize colors, shapes, and formatting"
  },
  {
    "objectID": "index.html#the-three-dags-your-mission",
    "href": "index.html#the-three-dags-your-mission",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "Your task is to recreate these three historical DAGs using DAFT, making them visually appealing and professionally formatted.\n\n\nHistorical Context: In 1747, James Lind discovered that lemons prevent scurvy through a controlled experiment. However, the understanding was incomplete - they knew lemons worked but not why.\nYour Task: Recreate this DAG showing the relationship between lemons and scurvy prevention.\nReference Image: \n\n\nCode\n# Create DAG showing the 1747 understanding: Lemons ‚Üí Scurvy Prevention\n# This was the first correct understanding, though incomplete\n\nimport daft\nimport matplotlib.pyplot as plt\n\n# Create PGM object with professional styling\npgm = daft.PGM(dpi=150)\n\n# Add nodes with professional colors and styling\npgm.add_node(\"lemons\", \"Lemons\", 1, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#FFD700',  # Vibrant golden yellow for lemons\n                 'edgecolor': '#FF8C00',  # Dark orange border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\npgm.add_node(\"scurvy_prevention\", \"Scurvy\\nPrevention\", 3, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#7FFF00',  # Bright chartreuse for prevention\n                 'edgecolor': '#228B22',  # Forest green border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\n# Add edge from Lemons to Scurvy Prevention\npgm.add_edge(\"lemons\", \"scurvy_prevention\")\n\n# Render the DAG\npgm.render()\nplt.title(\"DAG 1: 1747 Understanding - Lemons Prevent Scurvy\", fontsize=14, fontweight='bold')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nHistorical Context: Over time, people came to believe it was the acid in lemons that killed bacteria which was causing scurvy. This led to lemons being replaced by limes (cheaper but less Vitamin C) or just using acids like vinegar, causing scurvy to return.\nYour Task: Recreate this DAG showing the incorrect understanding of the data generating process.\nReference Image: \n\n\nCode\n# Create DAG showing the misguided belief: Acid ‚Üí Bacteria Death ‚Üí Scurvy Prevention\n# This was the WRONG understanding that led to scurvy returning\n\nimport daft\nimport matplotlib.pyplot as plt\n\n# Create PGM object with professional styling\npgm = daft.PGM(dpi=150)\n\n# Add nodes with professional colors - using red/orange tones to indicate wrong understanding\npgm.add_node(\"acid\", \"Acid\", 1, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#FF4500',  # Bright orange red for acid\n                 'edgecolor': '#8B0000',  # Dark red border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\npgm.add_node(\"bacteria\", \"Bacteria\\nDeath\", 3.5, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#FF8C00',  # Vibrant dark orange for bacteria death\n                 'edgecolor': '#FF4500',  # Orange red border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\npgm.add_node(\"scurvy_prevention\", \"Scurvy\\nPrevention\", 6, 1, aspect=3.0, scale=1.4,\n             plot_params={\n                 'facecolor': '#DAA520',  # Goldenrod - muted to show it's not effective\n                 'edgecolor': '#B8860B',  # Dark goldenrod border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\n# Add edges showing the incorrect causal chain\npgm.add_edge(\"acid\", \"bacteria\")\npgm.add_edge(\"bacteria\", \"scurvy_prevention\")\n\n# Render the DAG\npgm.render()\nplt.title(\"DAG 2: Misguided Belief - Acid Kills Bacteria (WRONG)\", fontsize=14, fontweight='bold')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\nHistorical Context: In 1928, the true mechanism was discovered - it was Vitamin C (ascorbic acid) that prevented scurvy. This complete understanding finally explained why lemons worked and why the acid theory was wrong.\nYour Task: Recreate this DAG showing the complete and correct understanding of the scurvy data generating process.\nReference Image: \n\n\nCode\n# Create DAG showing the 1928 understanding: Vitamin C ‚Üí Scurvy Prevention\n# This is the COMPLETE and CORRECT understanding of the scurvy mechanism\n\nimport daft\nimport matplotlib.pyplot as plt\n\n# Create PGM object with professional styling\npgm = daft.PGM(dpi=150)\n\n# Add nodes with professional colors - using cool, trustworthy colors for correct understanding\npgm.add_node(\"vitamin_c\", \"Vitamin C\\n(Complete Truth)\", 1, 1, aspect=3.2, scale=1.5,\n             plot_params={\n                 'facecolor': '#40E0D0',  # Vibrant turquoise for Vitamin C\n                 'edgecolor': '#008B8B',  # Dark cyan border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\npgm.add_node(\"scurvy_prevention\", \"Scurvy\\nPrevention\\n(Correct Method)\", 3.5, 1, aspect=3.2, scale=1.5,\n             plot_params={\n                 'facecolor': '#00FA9A',  # Bright medium spring green for prevention\n                 'edgecolor': '#006400',  # Dark green border\n                 'linewidth': 3,\n                 'alpha': 1.0,\n             })\n\n# Add edge showing the correct causal relationship\npgm.add_edge(\"vitamin_c\", \"scurvy_prevention\")\n\n# Render the DAG\npgm.render()\nplt.title(\"DAG 3: 1928 Understanding - Vitamin C Prevents Scurvy (CORRECT)\", fontsize=14, fontweight='bold')\nplt.show()"
  },
  {
    "objectID": "index.html#student-analysis-section",
    "href": "index.html#student-analysis-section",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "Your Task: Demonstrate your mastery of DAFT through comprehensive recreation of the three scurvy DAGs and thoughtful analysis. The bulk of your grade comes from successfully recreating the DAGs and answering the discussion questions.\n\n\n\n\n\n\nImportantüìä Challenge Requirements\n\n\n\nComplete all DAG recreation sections:\n\nDAG 1 (1747): Lemons prevent scurvy - correct but incomplete\nDAG 2 (Misguided): Acid kills bacteria - wrong understanding\n\nDAG 3 (1928): Vitamin C prevents scurvy - complete and correct\nOptional: Add a little professional styling to the DAGs to make them more visually appealing (example: use nice fill colors and/or enclose the text in the ellipse completely).\n\n\n\n\n\nYour DAGs should:\n\n(90% grade): Accurately recreate the reference images\n(100% grade): Add professional colors and possibly play with shapes to make it more visually appealing (example: use nice fill colors and/or enclose the text in the ellipse completely)\nInclude clear, readable labels\nDemonstrate understanding of DAFT customization options\nBe suitable for a business or academic audience\n\n\n\n\nHere‚Äôs an example (see Figure¬†1) of how to create a professionally styled node in DAFT with nice captions and references to the figure:\n\n\nCode\nimport daft\nimport matplotlib.pyplot as plt\n\n# Create a PGM object\npgm = daft.PGM(dpi=150, alternate_style=\"outer\")\n\n# Example of a professionally styled node\npgm.add_node(\"vitamin_c\", \"Vitamin C\\nIntake\" + r\" $(X)$\", 1, 1, aspect = 3, scale = 1.1,\n             plot_params={\n                 'facecolor': 'lightgreen', \n                 'edgecolor': 'darkgreen', \n                 'linewidth': 2,\n                 'alpha': 0.8,\n             })\npgm.add_node(\"health\", \"Healthiness\\n\"+r\" $(Y)$\", 3.25, 1, aspect = 3, scale = 1.1,\n             plot_params={\n                 'facecolor': 'thistle', \n                 'edgecolor': 'purple', \n                 'linewidth': 2,\n                 'alpha': 0.8,\n             })\npgm.add_edge(\"vitamin_c\", \"health\")\n\npgm.render()\n\n\n\n\n\n\n\n\nFigure¬†1: Example: Professional DAFT Node Styling\n\n\n\n\n\nKey Styling Parameters:\n\nfacecolor: Background color of the node\nedgecolor: Border color of the node\n\nlinewidth: Thickness of the border\nalpha: Transparency (0.0 to 1.0)\nfontsize: Size of text inside the node\naspect: Width/height aspect ratio of the node (default: 1.0)\nscale: Height of the node (default: 1.0)"
  },
  {
    "objectID": "index.html#getting-started-repository-setup",
    "href": "index.html#getting-started-repository-setup",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "ImportantüìÅ Getting Started\n\n\n\nStep 1: Create a new repository in your GitHub account named ‚ÄúdaftChallenge‚Äù (forked from https://github.com/flyaflya/daftChallenge)\nStep 2: Clone your repository locally using Cursor (or VS Code)\nStep 3: Be sure to install DAFT in your environment: pip install 'daft-pgm'.\nStep 4: Modify your local copy of this index.qmd file to complete the challenge and get it to be a github pages website."
  },
  {
    "objectID": "index.html#key-daft-resources",
    "href": "index.html#key-daft-resources",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "Essential DAFT Documentation:\n\nDAFT Documentation\nDAFT Examples\nMatplotlib Colors\n\nKey DAFT Parameters to Explore:\n\nplot_params: Dictionary of matplotlib parameters for styling\naspect: Controls node width (default: 1.0)\nscale: Controls node size (default: 1.0)\nfontsize: Text size in the node\nalternate: Use alternative node shape (True/False)"
  },
  {
    "objectID": "index.html#grading-rubric",
    "href": "index.html#grading-rubric",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "90% Grade: Successfully recreate all 3 DAGs with good visual quality.\n100% Grade: Recreate all 3 DAGs with enhanced quality and visual aesthetics (example: use nice fill colors and/or enclose the text in the ellipse completely)."
  },
  {
    "objectID": "index.html#submission-checklist",
    "href": "index.html#submission-checklist",
    "title": "DAFT Package Challenge",
    "section": "",
    "text": "Minimum Requirements (Required for Any Points):\n\nCreated repository named ‚ÄúdaftChallenge‚Äù in your GitHub account (forked from https://github.com/flyaflya/daftChallenge)\nCloned repository locally using Cursor (or VS Code)\nInstalled DAFT package successfully\nDocument rendered to HTML successfully\nHTML files uploaded to your repository\nGitHub Pages enabled and working\nSite accessible at https://[your-username].github.io/daftChallenge/\n\n90% Grade Requirements:\n\nSuccessfully recreate all 3 DAGs\nGood visual quality with appropriate styling\n\n100% Grade Requirements:\n\nAll DAG recreations completed with professional quality\nEnhanced visual aesthetics with professional styling"
  }
]